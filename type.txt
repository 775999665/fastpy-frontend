Infer result types:
infered_type = {single_type}
single_type = 
'none'
'bool'
'int'
'float'
'str'
'list'
'set'
'dict'
'range'
'range_iterator'
'slice'
'list_iterator'
'set_iterator'
'dict_iterator'

Internal:
state = (state_symbols, state_nodes)
state_symbols = {symbol_name: states}
state_nodes = {node_name: {collection_name: states} }
states = set(state_name)

names simple of simple nodes:
'none', 'bool', 'int', 'float', 'str', 'range', 'range_iterator', 'slice'

collection of complex nodes:
list: 'list_values'
set: 'set_values'
dict: 'dict_keys', 'dict_values'
dict_iterator: 'dict_iterator_owners'
list_iterator: 'list_iterator_owners'
set_iterator: 'set_iterator_owners'